version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-graphql_db}
      - LANG=en_US.utf8
      - LC_ALL=en_US.utf8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c shared_buffers=256MB -c max_connections=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 5s
    restart: unless-stopped

  mongodb:
    image: mongo:6
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-admin}
      - MONGO_INITDB_DATABASE=${MONGO_DB:-graphql_db}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    command: mongod --wiredTigerCacheSizeGB 1.5
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')"
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 5s
    restart: unless-stopped

volumes:
  postgres_data:
  mongodb_data: 