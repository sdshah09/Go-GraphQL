version: '3.8'

services:
  app:
    build: .
    ports:
    
      - "8080:8080"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      fluent-bit:
        condition: service_started
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-graphql_db}
      - LANG=en_US.utf8
      - LC_ALL=en_US.utf8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c shared_buffers=256MB -c max_connections=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 5s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # mongodb:
  #   image: mongo:6
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-admin}
  #     - MONGO_INITDB_DATABASE=${MONGO_DB:-graphql_db}
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/data/db
  #   command: mongod --wiredTigerCacheSizeGB 1.5
  #   healthcheck:
  #     test: mongosh --eval "db.adminCommand('ping')"
  #     interval: 2s
  #     timeout: 3s
  #     retries: 10
  #     start_period: 5s
  #   restart: unless-stopped
  #   logging:
  #     driver: "fluentd"
  #     options:
  #       fluentd-address: "localhost:24224"
  #       tag: "docker.mongodb"

  fluent-bit:
    image: fluent/fluent-bit:2.2
    volumes:
      - ./fluent-bit/conf:/fluent-bit/etc/
      - ./logs:/var/log/fluent-bit
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:24224"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s
    restart: unless-stopped

volumes:
  postgres_data:
  mongodb_data: 